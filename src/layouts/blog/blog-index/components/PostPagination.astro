---
import pagination from '@/lib/pagination';

export interface Props {
  currentPage: number;
  total: number;
  url: {
    prev?: string;
    next?: string;
    current: string;
  };
}

const { url, currentPage, total } = Astro.props;

const getBasePath = (pathname: string): string => {
  const a = pathname.split('/');
  if (!pathname.endsWith('/')) {
    a.push('');
  }
  if (isNaN(a[a.length - 2] as any)) {
    // as any - to bypass compiler check
    return a.join('/');
  }
  a.splice(-2, 1);
  return a.join('/');
};

const pages = pagination(currentPage, total);
const basePath = getBasePath(url.current);

const style = 'h-10 mx-1 min-w-[2.5rem] text-center';
const styleLink = 'transition-shadow hover:shadow hover:no-underline';
---

{total > 1 ? (
  <div class="my-12 flex w-full flex-wrap justify-center">
    {url.prev ? (
      <a class={`${style} ${styleLink}`} href={url.prev}>
        &larr;
      </a>
    ) : null}
    {pages.map((page) => {
      if (typeof page !== 'number') {
        return <span class="style">{page}</span>;
      }
      return (
        <a href={page === 1 ? basePath : `${basePath}${page}/`} class={`${style} ${styleLink}${page === currentPage ? 'text-black shadow-md' : ''}`}>
          {page}
        </a>
      );
    })}
    {url.next ? (
      <a href={url.next} class={`${style} ${styleLink}`}>
        &rarr;
      </a>
    ) : null}
  </div>
) : null}
